import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from statsmodels.tsa.holtwinters import ExponentialSmoothing
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

data = pd.read_csv('AirPassengers.csv', index_col='Month', parse_dates=True)

plt.plot(data)
plt.xlabel('Дата')
plt.ylabel('Кол-во пассажиров')
plt.title('Ежемесячные данные о транспортировке')
plt.show()

Q1 = data['#Passengers'].quantile(0.25)
Q3 = data['#Passengers'].quantile(0.75)
IQR = Q3 - Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR
data = data[(data['#Passengers'] >= lower_bound) & (data['#Passengers'] <= upper_bound)]

plt.plot(data)
plt.xlabel('Дата')
plt.ylabel('Количество пассажиров')
plt.title('Ежемесячные данные о транспортировке после удаления аномалий')
plt.show()

train_data, test_data = train_test_split(data, test_size=0.2, shuffle=False)

model = ExponentialSmoothing(train_data['#Passengers'], seasonal='add', seasonal_periods=12)
fit_model = model.fit()

test_predictions = fit_model.forecast(len(test_data))

future_predictions = fit_model.forecast(12)

plt.plot(train_data.index, train_data['#Passengers'], label='Обучающая выборка')
plt.plot(test_data.index, test_data['#Passengers'], label='Тестовая выборка')
plt.plot(test_data.index, test_predictions, label='Прогноз на тестовой выборке')
plt.plot(pd.date_range(start=test_data.index[-1], periods=13, freq='MS')[1:], future_predictions, label='Прогноз на следующий год')
plt.xlabel('Дата')
plt.ylabel('Количество пассажиров')
plt.title('Прогноз пассажиропотока')
plt.legend()
plt.show()

mse = mean_squared_error(test_data['#Passengers'], test_predictions)
print(f'Среднеквадратичная ошибка на тестовой выборке: {mse}')

plt.plot(test_data.index, test_data['#Passengers'], label='Фактические данные')
plt.plot(test_data.index, test_predictions, label='Прогноз')
plt.xlabel('Дата')
plt.ylabel('Количество пассажиров')
plt.title('Фактические и Прогнозные данные о транспортировке')
plt.legend()
plt.show()
